{"version":3,"sources":["LoginForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","name","password","details","setDetails","onSubmit","e","preventDefault","className","htmlFor","type","id","onChange","target","value","App","adminUser","user","setUser","setError","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA6BeA,EA3BC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,MAAS,EAEHC,mBAAS,CAACC,KAAK,GAAGC,SAAS,KAFxB,mBAEvBC,EAFuB,KAEfC,EAFe,KAU7B,OAAO,sBAAMC,SANO,SAACC,GACjBA,EAAEC,iBAEFT,EAAMK,IAGH,SACH,sBAAKK,UAAU,aAAf,UACI,uCACS,IAAPT,EAAY,qBAAKS,UAAU,QAAf,SAAwBT,IAAc,GACpD,sBAAKS,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOT,KAAK,OAAOU,GAAG,OAAOC,SAAU,SAACN,GAAD,OAAKF,EAAW,2BAAID,GAAL,IAAcF,KAAKK,EAAEO,OAAOC,UAASA,MAAOX,EAAQF,UAE1H,sBAAKO,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWT,KAAK,WAAWU,GAAG,WAAWC,SAAU,SAACN,GAAD,OAAKF,EAAW,2BAAID,GAAL,IAAcD,SAASI,EAAEO,OAAOC,UAASA,MAAOX,EAAQD,cAE1I,uBAAOQ,KAAK,SAASI,MAAM,gBCwBxBC,EA7CL,WACR,IAAMC,EACC,QADDA,EAEK,WAHC,EAMQhB,mBAAS,CAACC,KAAK,GAAGC,SAAS,KANnC,mBAMNe,EANM,KAMDC,EANC,OAOUlB,mBAAS,IAPnB,mBAOND,EAPM,KAOAoB,EAPA,KA+BZ,OACE,qBAAKX,UAAU,MAAf,SACkB,IAAZS,EAAKhB,KACL,sBAAKO,UAAU,UAAf,UACE,0CAAY,+BAAOS,EAAKhB,UACxB,wBAAQmB,QAVL,WACXF,EAAQ,CAACjB,KAAK,GAAGC,SAAS,MASlB,uBAGF,cAAC,EAAD,CAAWJ,MA9BP,SAAAK,GACVkB,QAAQC,IAAInB,GACTA,EAAQF,MAAMe,GAAkBb,EAAQD,UAAUc,GAEnDK,QAAQC,IAAI,aACZJ,EACE,CACEjB,KAAKE,EAAQF,KACbC,SAASC,EAAQD,YAKrBiB,EAAS,0BAiBoBpB,MAAOA,OC9B3BwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84131831.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginForm=({Login,error})=>{\r\n\r\n    const[details,setDetails]=useState({name:\"\",password:\"\"});\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault();\r\n\r\n        Login(details);\r\n    }\r\n\r\n    return(<form onSubmit={submitHandler}>\r\n        <div className=\"form-inner\">\r\n            <h2>Login</h2>\r\n            {(error!=\"\")?(<div className=\"error\">{error}</div>):\"\"}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" onChange={(e)=>setDetails({...details, name:e.target.value})} value={details.name}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={(e)=>setDetails({...details, password:e.target.value})} value={details.password}/>\r\n            </div>\r\n            <input type=\"submit\" value=\"LOGIN\"/>\r\n        </div>\r\n    </form>);\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\nimport LoginForm from './LoginForm'; \n\nconst App=()=>{\n  const adminUser={\n    name:\"admin\",\n    password:\"admin123\"\n  }\n\n  const[user,setUser]=useState({name:\"\",password:\"\"});\n  const[error,setError]=useState(\"\");\n\n  const Login=details=>{\n    console.log(details);\n    if(details.name==adminUser.name && details.password==adminUser.password)\n    {\n      console.log(\"Logged In\");\n      setUser(\n        {\n          name:details.name,\n          password:details.password\n        }\n      );\n    }\n    else{\n      setError(\"Details Do not match!\");\n    }\n  }\n\n  const Logout=()=>{\n    setUser({name:\"\",password:\"\"});\n  }\n\n\n  return(\n    <div className=\"App\">\n        {(user.name !=\"\")?(\n          <div className=\"welcome\">\n            <h2>Welcome,<span>{user.name}</span></h2>\n            <button onClick={Logout}>Logout</button>\n          </div>\n        ):(\n          <LoginForm Login={Login} error={error}/>\n        )}\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}